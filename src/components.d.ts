/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  VincentImg as WopVincentImg
} from './components/wop-vincent-img/wop-vincent-img';

declare global {
  interface HTMLWopVincentImgElement extends WopVincentImg, HTMLStencilElement {
  }
  var HTMLWopVincentImgElement: {
    prototype: HTMLWopVincentImgElement;
    new (): HTMLWopVincentImgElement;
  };
  interface HTMLElementTagNameMap {
    "wop-vincent-img": HTMLWopVincentImgElement;
  }
  interface ElementTagNameMap {
    "wop-vincent-img": HTMLWopVincentImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "wop-vincent-img": JSXElements.WopVincentImgAttributes;
    }
  }
  namespace JSXElements {
    export interface WopVincentImgAttributes extends HTMLAttributes {
      dataSrc?: string;
    }
  }
}


import {
  Vincent as WopVincent
} from './components/wop-vincent/wop-vincent';

declare global {
  interface HTMLWopVincentElement extends WopVincent, HTMLStencilElement {
  }
  var HTMLWopVincentElement: {
    prototype: HTMLWopVincentElement;
    new (): HTMLWopVincentElement;
  };
  interface HTMLElementTagNameMap {
    "wop-vincent": HTMLWopVincentElement;
  }
  interface ElementTagNameMap {
    "wop-vincent": HTMLWopVincentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "wop-vincent": JSXElements.WopVincentAttributes;
    }
  }
  namespace JSXElements {
    export interface WopVincentAttributes extends HTMLAttributes {
      delay?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
